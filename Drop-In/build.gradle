apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

android {
    compileSdkVersion 19
    buildToolsVersion '20.0.0'

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
        versionCode 10
        versionName '1.1.0'
        testInstrumentationRunner 'com.braintreepayments.api.ui.NoAnimationsInstrumentationTestRunner'
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

sdkManager {
    emulatorVersion 'android-' + (System.getenv('EMULATOR_VERSION') ?: '19')
}

dependencies {
    compile project(':BraintreeApi')

    androidTestCompile project(':TestUtils')
}

task grantAnimationPermission(type: Exec, dependsOn: 'installDebugTest') {
    commandLine 'adb shell pm grant com.braintreepayments.api.dropin.test android.permission.SET_ANIMATION_SCALE'.split(' ')
}

tasks.whenTaskAdded { task ->
    if (task.name.startsWith('connectedAndroidTest')) {
        task.dependsOn grantAnimationPermission
    }
}

/* maven deploy + signing */
task javadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    classifier = 'javadoc'
    from javadocs.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task projectDependenciesJar(type: Jar, dependsOn: android.libraryVariants.release.javaCompile) {
    archiveName "braintree-api-${android.defaultConfig.versionName}.jar"
    from {
        configurations.compile.findAll {
            it.getName() != 'android.jar'
        }.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

task fullProjectZip(type: Zip, dependsOn: android.libraryVariants.release.javaCompile) {
    classifier = 'project'
    from fileTree(dir: 'src/main').exclude('java')

    into('libs') {
        from projectDependenciesJar
    }
    into('src') {
        from android.sourceSets.main.java.srcDirs
    }
}

fullProjectZip.dependsOn(projectDependenciesJar)

artifacts {
    archives javadocsJar
    archives sourcesJar
    archives fullProjectZip
}

signing {
    sign configurations.archives
}

def sonatypeUsername = System.properties.containsKey('sonatypeUsername') ? System.properties['sonatypeUsername'] : ''
def sonatypePassword = System.properties.containsKey('sonatypePassword') ? System.properties['sonatypePassword'] : ''

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.setArtifactId 'braintree'

            pom.project {
                name 'braintree'
                groupId = 'com.braintreepayments.api'
                version = "${android.defaultConfig.versionName}"
                packaging 'aar'
                description 'Drop-in payment form for Braintree\'s v.zero SDK. Integrate this library to add a readymade UI for your payments.'
                url 'https://github.com/braintree/braintree_android'

                scm {
                    url 'scm:git@github.com:braintree/braintree_android.git'
                    connection 'scm:git@github.com:braintree/braintree_android.git'
                    developerConnection 'scm:git@github.com:braintree/braintree_android.git'
                }

                developers {
                    developer {
                        id 'devs'
                        name 'Braintree Payments'
                    }
                }

                licenses {
                    license {
                        name 'MIT'
                        url 'http://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}
